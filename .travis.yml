language: cpp

compiler:
  - gcc
  - clang

os:
  - linux
  - osx

env:
  - COVERALLS=true
  - COVERALLS=false

matrix:
  exclude:
    - os: osx
      compiler: gcc
    - os: linux
      env: COVERALLS=true
      
before_install:
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; 
    then 
      brew update > /dev/null 2>&1;
      brew tap homebrew/science;
      brew install --quiet eigen;
      brew install --quiet tbb --c++11;
      brew install --quiet nlopt;
    fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; 
    then 
      sudo add-apt-repository --yes ppa:ubuntu-toolchain-r/test;
      sudo add-apt-repository --yes ppa:smspillaz/cmake-3.0.2;
      sudo apt-get update -qq;
      sudo apt-get purge -qq cmake;
      sudo apt-get install -qq cmake libboost-dev libboost-test-dev libeigen3-dev libtbb-dev;
      cmake --version;
    fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$CXX" == "g++" ];
    then
      sudo apt-get install -qq gcc-4.4 g++-4.4 libstdc++6-4.4-dev clang-3.6;
    fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$CXX" == "clang++" ];
    then
      sudo apt-get install -qq gcc-4.8 g++-4.8 libstdc++-4.8-dev;
    fi

before_script:
  - if [ "$CXX" == "g++" ]; 
    then
      export CC=gcc-4.4;
      export CXX=g++-4.4;
    fi
  - if [ "$COVERALLS" == "true" ];
    then 
      cmake -DCOVERALLS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=ON .;
    else
      if [ "$TRAVIS_OS_NAME" == "osx" ];
      then
        cmake -DBUILD_TESTING=ON -DBUILD_EXAMPLES=ON .; 
      elif [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$CXX" == "clang++" ];
      then
        CC=clang-3.6 CXX =clang++-3.6 cmake -DBUILD_TESTING=ON -DUSE_THREADS=OFF -DWITH_SANITIZERS=ON .;   
      else
        cmake -DBUILD_TESTING=ON .;
      fi
    fi

script:
  - make
  - if [ "$COVERALLS" == "true" ];
    then 
      make coveralls;
    else
      ctest --output-on-failure; 
    fi

notifications:
  email:
    on_success: change
    on_failure: always
