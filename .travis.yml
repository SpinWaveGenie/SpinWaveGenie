language: generic

sudo: required

branches:
  only:
    - master

matrix:
  include:
    - os: linux
      dist: trusty
      compiler: gcc
      env: PYTHON_VERSION=2.7
    - os: linux
      dist: trusty
      compiler: gcc
      env: PYTHON_VERSION=3.4
    - os: osx
      osx_image: xcode8.3
      compiler: clang
      env: PYTHON_VERSION=3.6
    - os: osx
      osx_image: xcode8.2
      compiler: clang
      env: PYTHON_VERSION=2.7
    - os: osx
      osx_image: xcode7.3
      compiler: clang
      env: PYTHON_VERSION=2.7
      env: COVERALLS=true

before_install:
  - if [ "$TRAVIS_OS_NAME" == "osx" ];
    then
      brew update > /dev/null 2>&1;
      brew tap homebrew/science;
      brew outdated cmake || brew upgrade cmake;
      brew install eigen;
      brew install tbb --c++11;
      brew install nlopt;
      if [ "$PYTHON_VERSION" == "3.6" ];
      then
        brew install python3;
        brew install gcc;
        brew link --overwrite gcc;
        brew install numpy --with-python3 --without-python;
      fi
    fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ];
    then
      wget -q https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.tar.gz --no-check-certificate;
      tar -xzf cmake-3.7.2-Linux-x86_64.tar.gz;
      sudo ln -f -s ./cmake-3.7.2-Linux-x86_64/bin/cmake /usr/local/bin/cmake;
      sudo apt-get update -qq;
      sudo apt-get install -qq libboost-dev libboost-test-dev libtbb-dev;
      wget -q http://bitbucket.org/eigen/eigen/get/3.3.3.tar.gz;
      tar -xzf 3.3.3.tar.gz;
      cd eigen-eigen-67e894c6cd8f;
      mkdir build;
      cd build;
      cmake ..;
      make;
      sudo make install;
      if [ "$PYTHON_VERSION" == "3.4" ];
      then
        sudo apt-get install -qq python3-dev python3-numpy;
      else
        sudo apt-get install -qq python-dev python-numpy;
      fi
    fi

before_script:
  - cd $TRAVIS_BUILD_DIR
  - if [ "$TRAVIS_OS_NAME" == "osx" ];
    then
      if [ "$COVERALLS" == "true" ];
      then
        echo "CHECKING CODE COVERAGE, $COVERALLS";
        cmake -DWARNINGS_AS_ERRORS=ON -DCOVERALLS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=ON .;
      elif [ "$PYTHON_VERSION" == "3.6" ];
      then
        cmake -DWARNINGS_AS_ERRORS=ON -DBUILD_TESTING=ON -DPYTHON_EXECUTABLE=/usr/local/bin/python3 -DPYTHON_LIBRARY=/usr/local/Frameworks/Python.framework/Versions/3.6/lib/libpython3.6m.dylib;
      else
        cmake -DWARNINGS_AS_ERRORS=ON -DBUILD_TESTING=ON;
      fi
    fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ];
    then
      if [ "$PYTHON_VERSION" == "3.4" ];
      then
        cmake -DWARNINGS_AS_ERRORS=ON -DBUILD_EXAMPLES=ON -DBUILD_TESTING=ON -DPYTHON_EXECUTABLE=/usr/bin/python3 -DPYTHON_LIBRARY=/usr/lib/x86_64-linux-gnu/libpython3.4m.so;
      else
        cmake -DWARNINGS_AS_ERRORS=ON -DBUILD_TESTING=ON -DPYBIND11_PYTHON_VERSION=$PYTHON_VERSION;
      fi
    fi

script:
  - make -j 2;
  - if [ "$COVERALLS" == "true" ];
    then
      make coveralls -j 2;
    else
      ctest --output-on-failure -j 2;
    fi

notifications:
  email:
    on_success: change
    on_failure: always
