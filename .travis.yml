# for coverity, use a single build using the system compiler

language: cpp
compiler: gcc
os: linux
dist: trusty
sudo: required

before_install:
  - wget -q https://cmake.org/files/v3.10/cmake-3.10.3-Linux-x86_64.tar.gz --no-check-certificate;
  - tar -xzf cmake-3.10.3-Linux-x86_64.tar.gz;
  - sudo ln -f -s ./cmake-3.10.3-Linux-x86_64/bin/cmake /usr/local/bin/cmake;
  - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y;
  - sudo apt-get update -qq;
  - sudo apt-get install -qq gcc-6 g++-6 libboost-dev libboost-test-dev libtbb-dev;
  - pip install --user --upgrade pip virtualenv;
  - virtualenv -p python3.4 venv;
  - source venv/bin/activate;
  - pip install numpy;

before_script:
  - export CXX=g++-6;
  - export CC=gcc-6;
  - cmake -DWARNINGS_AS_ERRORS=ON -DBUILD_TESTING=ON -DPYBIND11_PYTHON_VERSION=3.4;

script:
  - if [ "${COVERITY_SCAN_BRANCH}" != 1 ]; then make -j 2; make test -j 2; fi

notifications:
  email:
    on_success: change
    on_failure: always

env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "iEULeaC9mf9PVTasF8nrCFRepmUGWaGikOqPB9Dbmm1LSBvVT4Z5SurbU9Gh0IljgNp/SJ1388mZ3b2duYxfcGsq8tPNCO/ZySWvK3AIhPKCql3vGCHybD1yMaPkG/ZU5hE9E+uCAZuIQVeOUvMsNQPP4mcjvzstvmuy7aGbIvg="

addons:
  coverity_scan:
    project:
      name: "SpinWaveGenie/SpinWaveGenie"
      description: "Build submitted via Travis CI"
    notification_email: hahnse@ornl.gov
    build_command_prepend: "make clean"
    build_command:   "make"
    branch_pattern: coverity_scan

